# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactStagingDirectory)"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: PowerShell@2
  # Define environment variables here.
  # We will assign the SECRET to the environment variable SRCCLR_API_TOKEN
  env: {SRCCLR_API_TOKEN: $(SRCCLR_API_TOKEN)}
  inputs:
    targetType: 'inline'
    script: |
      # To allow external apps and scripts to be ran.
      Set-ExecutionPolicy AllSigned -Scope Process -Force
      # Download and Execute the downloaded powershell script
      iex ((New-Object System.Net.WebClient).DownloadString('https://download.srcclr.com/ci.ps1'))
      # Use predefined azure pipeline variable Build.SourcesDirectory to locate your repository
      # Finally scan it with our awesome tool! 
      srcclr scan $(Build.SourcesDirectory)
